version: '3'
services:
  categoriesdb:
    container_name: categories-db
    image: mongo
  categories:
    container_name: api-categories
    build: backend/categories/
    command: python -m flask run --host=0.0.0.0
    environment:
      - FLASK_APP=api.py
      - API_KEY=testkey
      - MONGO_URI=mongodb://categoriesdb
    ports:
      - "5001:5000"
    volumes:
      - ./backend/categories:/app/src
    depends_on:
      - categoriesdb
    links:
      - categoriesdb
  categories-test:
    container_name: api-categories-test
    build: backend/categories/
    command: /bin/sh -c "coverage run --source='.' /usr/local/bin/nosetests; coverage report -m"
    environment:
      - API_KEY=testkey
      - MONGO_URI=mongomock://localhost
    volumes:
      - ./backend/categories:/app/src
  productsdb:
    container_name: products-db
    image: mongo
  products:
    container_name: api-products
    build: backend/products/
    command: python -m flask run --host=0.0.0.0
    environment:
      - FLASK_APP=api.py
      - API_KEY=testkey
      - MONGO_URI=mongodb://productsdb
    ports:
      - "5002:5000"
    volumes:
      - ./backend/products:/app/src
    depends_on:
      - productsdb
    links:
      - productsdb
  products-test:
    container_name: api-products-test
    build: backend/products/
    command: /bin/sh -c "coverage run --source='.' /usr/local/bin/nosetests; coverage report -m"
    environment:
      - API_KEY=testkey
      - MONGO_URI=mongomock://localhost
    volumes:
      - ./backend/products:/app/src
  gateway:
    container_name: api-gateway
    build: backend/gateway/
    command: python -m flask run --host=0.0.0.0
    environment:
      - FLASK_APP=api.py
      - API_KEY=testkey
      - URL_CATEGORIES=http://categories:5000
      - URL_PRODUCTS=http://products:5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend/gateway:/app/src
  gateway-test:
    container_name: api-gateway-test
    build: backend/gateway/
    command: /bin/sh -c "coverage run --source='.' /usr/local/bin/nosetests; coverage report -m"
    environment:
      - API_KEY=testkey
    volumes:
      - ./backend/gateway:/app/src
